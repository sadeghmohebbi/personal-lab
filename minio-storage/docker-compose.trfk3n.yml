# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
  command: server --console-address ":9001" http://minio{1...3}/data{1...2}
  networks:
    - minio-network
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_BROWSER_REDIRECT_URL: http://s3.kuberworks.local/minio/ui
    MINIO_ROOT_USER: admin
    MINIO_ROOT_PASSWORD: minio@dmin
  extra_hosts:
    - "s3.kuberworks.local:185.204.170.125"
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  traefik:
    build: traefik/
    command:
      - "--entrypoints.minio.address=:9000"
      - "--entrypoints.minio-console.address=:9001"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.file.watch=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - minio-network

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:

networks:
  minio-network:
